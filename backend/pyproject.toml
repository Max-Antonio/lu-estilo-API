[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Max-Antonio <antoniomax@academico.ufs.br>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.115.12"
uvicorn = "^0.34.2"
pydantic = {extras = ["email"], version = "^2.11.4"}
sqlmodel = "^0.0.24"
pydantic-settings = "^2.9.1"
psycopg = "^3.2.9"
bcrypt = "^4.3.0"
python-multipart = "^0.0.20"
pyjwt = "^2.10.1"
ruff = "^0.11.11"
pytest = "^8.3.5"
httpx = "^0.28.1"
pytz = "^2025.2"
psycopg2-binary = "^2.9.10"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
    'D103',
    'D100',
    'D101',
    'D202',  # Allow blank line after docstring.
    'A002',  # Allow shadowing 'id'.
    'D401',  # Exige imperative mood em docstrings, mas falha pro português.
    'D107',  # Exige docstrings em __inits__.
    'S603',  # Exige validação na call de subprocess.run.
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["PLR2004", "S101", "ANN201"]
"app/routes/**.py" = ["PLR2004", "S101", "ANN201"]

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.format]
quote-style = "single"